# make image
# > docker build -t line/finschia-builder:static -f builders/Dockerfile.static_centos7 .
#
# run build
# > docker run -it --rm -v $(pwd):/code line/finschia-builder:static_centos7
#
# make image and run build
# > docker run -it --rm -v $(pwd):/code -e FINSCHIA_BUILD_OPTIONS=rocksdb $(docker build -f builders/Dockerfile.static_centos7 -q .)

FROM centos:centos7

ENV FINSCHIA_BUILD_OPTIONS="goleveldb"


RUN yum -y update && \
    yum -y install \
       ca-certificates \
       curl \
       gcc \
       gcc-c++ \
       glibc-devel \
       make \
       git \
       which \
       libstdc++ \
       libstdc++-static \
       wget \
       python3

# install rust
RUN mkdir /rust
WORKDIR /rust

ENV RUSTUP_HOME=/usr/local/rustup
ENV CARGO_HOME=/usr/local/cargo
ENV PATH=$CARGO_HOME/bin:$PATH

RUN wget "https://static.rust-lang.org/rustup/dist/x86_64-unknown-linux-gnu/rustup-init"
RUN chmod +x rustup-init
RUN ./rustup-init -y --no-modify-path --default-toolchain 1.53.0; rm rustup-init
RUN chmod -R a+w $RUSTUP_HOME $CARGO_HOME

RUN sh -c "curl https://sh.rustup.rs -sSf | sh -s -- -y"
ENV PATH=$HOME/.cargo/bin:$PATH

# install go
WORKDIR /tmp
ADD https://golang.org/dl/go1.18.5.linux-amd64.tar.gz .
RUN tar -C /usr/local -xzf go1.18.5.linux-amd64.tar.gz
ENV PATH=/usr/local/go/bin:$PATH

# install cmake3(required by snappy, If use yum, it installs as version 2)
RUN wget https://cmake.org/files/v3.12/cmake-3.12.3.tar.gz
RUN tar zxvf cmake-3.*
RUN cd cmake-3.* && ./bootstrap --prefix=/usr/local
RUN cd cmake-3.* && make install

WORKDIR /code

# copy build script
COPY builders/scripts/build-static.sh builders/scripts/build-static.sh

# build Finschia
ENTRYPOINT builders/scripts/build-static.sh
